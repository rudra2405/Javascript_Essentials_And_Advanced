Question 1: What are the different types of operators in JavaScript? Explain with examples.
// // Answer:

JavaScript has several types of operators that can be categorized into different groups based on their functionality. 
Here are the main types of operators in JavaScript:
1. **Arithmetic Operators**: Used to perform mathematical operations.
   - `+` (Addition): `let sum = 5 + 3; // sum is 8`
   - `-` (Subtraction): `let difference = 5 - 3; // difference is 2`
   - `*` (Multiplication): `let product = 5 * 3; // product is 15`
   - `/` (Division): `let quotient = 6 / 3; // quotient is 2`
   - `%` (Modulus): `let remainder = 5 % 2; // remainder is 1`

    - `**` (Exponentiation): `let power = 2 ** 3; // power is 8`
2. **Assignment Operators**: Used to assign values to variables.
    - `=` (Assignment): `let x = 10;`
    - `+=` (Addition Assignment): `x += 5; // x is now 15`
    - `-=` (Subtraction Assignment): `x -= 3; // x is now 12`
    - `*=` (Multiplication Assignment): `x *= 2; // x is now 24`
    - `/=` (Division Assignment): `x /= 4; // x is now 6`
    - `%=` (Modulus Assignment): `x %= 5; // x is now 1`
    - `**=` (Exponentiation Assignment): `x **= 3; // x is now 1`
3. **Comparison Operators**: Used to compare values and return a boolean result.
    - `==` (Equal to): `5 == '5'; // true (type coercion)`
    - `===` (Strict Equal to): `5 === 5; // true (no type coercion)`
    - `!=` (Not equal to): `5 != '6'; // true`
    - `!==` (Strict Not equal to): `5 !== 6; // true`
    - `<` (Less than): `3 < 5; // true`
    - `>` (Greater than): `5 > 3; // true`
    - `<=` (Less than or equal to): `3 <= 3; // true`
    - `>=` (Greater than or equal to): `5 >= 4; // true`
4. **Logical Operators**: Used to perform logical operations.
    - `&&` (Logical AND): `true && false; // false` 
    - `||` (Logical OR): `true || false; // true`
    - `!` (Logical NOT): `!true; // false`


Question 2: What is the difference between == and === in JavaScript?
// // Answer:
difference between == and === is: 
 == checks dataypes values only.
 === checks datatypes value and also types.

 for example:   let a = 5;
 let b = '5';
 console.log(a == b);  //true both valyes are equal
 console.log(a === b); // false because a is number and b is string.
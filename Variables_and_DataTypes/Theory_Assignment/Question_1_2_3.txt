Question 1: What are variables in JavaScript? 
// Answer:
Variables in JavaScript are containers for storing data values. They can hold different types of data,

how you declare variable using let,var and const?
and can be changed or updated throughout the program. Variables are declared using keywords such as `let`, `var`, and `const`.
- `let` allows you to declare a block-scoped variable that can be reassigned.
- `var` declares a variable that is function-scoped or globally scoped, and can also be reassigned.
- `const` declares a block-scoped variable that cannot be reassigned after its initial assignment.



Question 2: Explain the different data types in JavaScript. Provide examples for each.
// Answer:
JavaScript has several data types, which can be categorized into two main groups: primitive types and 
reference types.
1. Primitive Types:
- **String**: Represents a sequence of characters. Example: `let name = "John";`
- **Number**: Represents numeric values, both integers and floating-point numbers. Example: `let age = 30;`
- **Boolean**: Represents a logical value, either `true` or `false`. Example        
: `let isStudent = true;`
- **Undefined**: Represents a variable that has been declared but not assigned a value. Example
: `let x; // x is undefined`
- **Null**: Represents an intentional absence of any value. Example: `let y = null;`
- **Symbol**: Represents a unique and immutable value, often used as object property keys. Example:
  `let sym = Symbol("description");`
- **BigInt**: Represents integers with arbitrary precision. Example: `let bigNumber = 1234567890123456789012345678901234567890n;`
2. Reference Types:
- **Object**: Represents a collection of key-value pairs. Example: `let person = { name: "Alice", age: 25 };`
- **Array**: A special type of object that holds an ordered collection of values. Example: `let fruits = ["apple", "banana", "cherry"];`



Question 3: What is the difference between undefined and null in JavaScript?
// Answer:
The difference between `undefined` and `null` in JavaScript lies in their meanings and usage:
- **Undefined**: This is a type itself and indicates that a variable has been declared but
has not been assigned a value. It is the default value for uninitialized variables. For example:
  ```javascript
  let x; // x is declared but not assigned, so it is undefined
  console.log(x); // Output: undefined
  ```

- **Null**: This is an object type and represents an intentional absence of any value. It is often used to indicate that a variable should have no value. For example:
  ```javascript   

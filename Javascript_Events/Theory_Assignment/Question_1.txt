Question 1: What are JavaScript events? Explain the role of event listeners.
JavaScript events are actions or occurrences that happen in the browser, which can be detected and responded to by JavaScript code. These events can be triggered by user interactions such as clicking a button, submitting a form, moving the mouse, pressing a key, or even loading a webpage. Events can also be generated by the browser itself, such as when an element is resized or when a network request completes.

Event listeners are functions that are set up to listen for specific events on a particular element in the DOM (Document Object Model). When the specified event occurs, the event listener is triggered, executing the associated function. This allows developers to create interactive web applications by responding to user actions and other events dynamically.

Question 2: How does the addEventListener() method work in JavaScript? Provide an example.
The `addEventListener()` method in JavaScript is used to attach an event listener to a specified element. This method takes two main parameters: the type of event to listen for (such as "click", "mouseover", etc.) and the function that should be executed when that event occurs. Optionally, a third parameter can be provided to specify options like whether the event should be captured or if it should only trigger once.

Here's an example of how to use `addEventListener()`:

// Select a button element
const button = document.getElementById('myButton');
// Define a function to be executed when the button is clicked
function handleClick() {
    alert('Button was clicked!');
}
// Attach the event listener to the button
button.addEventListener('click', handleClick);

